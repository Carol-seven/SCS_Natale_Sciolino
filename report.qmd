---
title: "Report 1.0"
author: "Shiying Xiao"
date: "`r Sys.Date()`"
format:
  html:
    code-fold: true
    code-overflow: wrap
    code-tools: true
    df-print: paged
    embed-resources: true
    mermaid:
      theme: default
    page-layout: full
    toc: true
    toc-location: left
    toc-title: Contents
execute:
  cache: false
  warning: false
  errors: false
  fig-width: 8
  fig-height: 6
editor_options: 
  chunk_type: console
theme:
  light: pandoc
  dark: darkly
---


```{r}
library(dplyr) ## data manipulation
library(ggplot2) ## visualization
library(ggsignif) ## for geom_signif
library(emmeans) ## for emmeans
library(ggeffects) ## for datagrid
library(glmmTMB) ## for glmmTMB
library(janitor) ## for clean_names
library(marginaleffects) ## for avg_comparisons, avg_predictions
library(openxlsx) ## for write.xlsx
library(performance) ## for check_model
library(plotrix) ## for sizetree
library(RColorBrewer) ## for brewer.pal
library(readxl) ## for read_xlsx
library(sjPlot) ## for tab_model
if (! dir.exists("output")) dir.create("output")
if (file.exists("output/summary.xlsx")) invisible(file.remove("output/summary.xlsx"))
if (file.exists("output/contrast.xlsx")) invisible(file.remove("output/contrast.xlsx"))
wb_summary <- createWorkbook()
wb_contrast <- createWorkbook()
p_to_stars <- function(p) {
  case_when(p <= 0.001 ~ "***",
            p <= 0.01  ~ "**",
            p <= 0.05  ~ "*",
            p <= 0.1   ~ ".",
            is.na(p)   ~ "",
            TRUE ~ "ns")
}
```


# Acknowledgment


This report was generated by [Statistical Consulting Services](https://statsconsulting.uconn.edu/) (SCS)
at the [University of Connecticut](https://uconn.edu/).
For any questions regarding the analysis or findings, please contact the SCS
director [Dr. Timothy E. Moore](mailto:timothy.e.moore@uconn.edu).


::: {style="text-align: center;"}
[![UConn](https://raw.githubusercontent.com/uconn-scs/msDiaLogue/main/man/figure/uconn.png){style="width:20%; margin:0 2%"}](https://uconn.edu/)
[![CORE](https://raw.githubusercontent.com/uconn-scs/msDiaLogue/refs/heads/main/man/figure/core.png){style="width:18%; margin:0 2%"}](https://core.uconn.edu/)
[![SCS](https://raw.githubusercontent.com/uconn-scs/msDiaLogue/refs/heads/main/man/figure/scs.png){style="width:15%; margin:0 0%"}](https://statsconsulting.uconn.edu/)
:::


# Outline

```{mermaid}
%%{init: {'flowchart': {'htmlLabels': true, 'wrap': 'off', 'useMaxWidth': true, 'wrappingWidth': 1200}}}%%
flowchart TB
Hidden1[ ]:::hidden
Hidden2[ ]:::hidden
subgraph "Dependent Measures:<br/>Eaten, Killed<br/>For each Stimulation Site:<br/>LHA, DP, BNST"
Hidden2
E["Model 5: grp + stim_frequency + (1|ms_number)"]
F["Model 6: grp * stim_frequency + (1|ms_number)"]
G["Model 7: gender + grp + stim_frequency + (1|ms_number)"]
end
subgraph "Dependent Measures:<br/>Eaten, Killed"
Hidden1
A["Model 1: gender + grp + stim_frequency + implant_sites + (1|ms_number)"]
B["Model 2: grp + stim_frequency + implant_sites + (1|ms_number)"]
C["Model 3: grp * stim_frequency + implant_sites + (1|ms_number)"]
D["Model 4: gender + grp + stim_frequency + (1|ms_number)"]
end
```


## Variables


+ gender: Gender (M, F)

+ grp: Group (EYFP, ChR2)

+ stim_frequency: Photostimulation frequency (5, 10, 20)

+ implant_sites: Stimulation site (LHA, DP, BNST)

+ ms_number: Mouse ID

+ eaten_binary: 1 = eaten, 0 = not eaten

+ killed_binary: 1 = killed, 0 = not killed


## Models


All models were fit using a binomial family with a logit link function.


+ Model 1 (full additive model):

::: {style="text-indent: 2em;"}
gender + grp + stim_frequency + implant_sites + (1|ms_number)
:::

+ Model 2 (Model 1 without gender):

::: {style="text-indent: 2em;"}
grp + stim_frequency + implant_sites + (1|ms_number)
:::

+ Model 3 (interaction model):

::: {style="text-indent: 2em;"}
grp * stim_frequency + implant_sites + (1|ms_number)
:::

+ Model 4 (Model 1 without implant_sites):

::: {style="text-indent: 2em;"}
gender + grp + stim_frequency + (1|ms_number)
:::

+ Model 5 (Model 2 fitted separately for each implant_sites level):

::: {style="text-indent: 2em;"}
grp + stim_frequency + (1|ms_number)
:::

+ Model 6 (Model 3 fitted separately for each implant_sites level):

::: {style="text-indent: 2em;"}
grp * stim_frequency + (1|ms_number)
:::

+ Model 7 (Model 4 fitted separately for each implant_sites level):

::: {style="text-indent: 2em;"}
gender + grp + stim_frequency + (1|ms_number)
:::


## Post hoc analysis


+ Marginal effects: Estimate the marginal predicted probabilities for each
  variable, averaging over the levels of the other fixed effects, while
  accounting for random effects variance.

+ Pairwise comparisons: Estimate pairwise contrasts between levels of each
  independent variable on the probability scale (i.e., difference in predicted
  probabilities), accounting for random effects variance.


# Data summary


```{r fig.width = 7, fig.height = 5}
df <- read_xlsx("data/Cricket Hunting Task Data 10-10-2025.xlsx") %>%
  clean_names() %>%
  rename(grp = group) %>%
  mutate(gender = factor(gender, levels = c("M", "F")), ## M baseline
         grp = factor(grp, levels = c("EYFP", "ChR2")), ## EYFP baseline
         stim_frequency = factor(as.character(stim_frequency),
                                 levels = c("5", "10", "20")), ## 5 baseline
         implant_sites = factor(implant_sites, levels = c("LHA", "DP", "BNST"))) ## LHA baseline

vars <- c("gender", "grp", "stim_frequency", "implant_sites")
counts <- sapply(df[vars], function(x) length(unique(x)))
total  <- sum(counts)
mycol <- colorRampPalette(brewer.pal(min(total, 12), "Set3"))(total)
mycol <- split(mycol, rep(seq_along(counts), counts))
names(mycol) <- vars
sizetree(df[vars], col = mycol)
```

```{r results='asis'}
dms <- c("eaten_binary", "killed_binary")
modnames <- paste("Model", 1:7)
sites <- levels(df$implant_sites)
for (dm in dms) {
  title_name <- gsub("_.*", "", dm)
  title_name <- paste0(toupper(substring(title_name, 1, 1)), substring(title_name, 2))
  cat(knitr::knit_child("code/heading1.qmd", quiet = TRUE))
}
```
